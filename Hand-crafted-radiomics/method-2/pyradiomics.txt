usage: pyradiomics image|batch [mask] [Options]

optional arguments:
  -h, --help            show this help message and exit
  --label N, -l N       (DEPRECATED) Value of label in mask to use for
                        feature extraction.
  --version             Print version and exit

Input:
  Input files and arguments defining the extraction:
  - image and mask files (single mode) or CSV-file specifying them (batch mode)
  - Parameter file (.yml/.yaml or .json)
  - Overrides for customization type 3 ("settings")
  - Multi-threaded batch processing

  {Image,Batch}FILE     Image file (single mode) or CSV batch file (batch mode)
  MaskFILE              Mask file identifying the ROI in the Image.
                        Only required when in single mode, ignored otherwise.
  --param FILE, -p FILE
                        Parameter file containing the settings to be used in extraction
  --setting "SETTING_NAME:VALUE", -s "SETTING_NAME:VALUE"
                        Additional parameters which will override those in the
                        parameter file and/or the default settings. Multiple
                        settings possible. N.B. Only works for customization
                        type 3 ("setting").
  --jobs N, -j N        (Batch mode only) Specifies the number of threads to use for
                        parallel processing. This is applied at the case level;
                        i.e. 1 thread per case. Actual number of workers used is
                        min(cases, jobs).

Output:
  Arguments controlling output redirection and the formatting of calculated results.

  --out FILE, -o FILE   File to append output to
  --skip-nans           Add this argument to skip returning features that have an
                        invalid result (NaN)
  --format {csv,json,txt}, -f {csv,json,txt}
                        Format for the output.
                        "txt" (Default): one feature per line in format "case-N_name:value"
                        "json": Features are written in a JSON format dictionary
                        (1 dictionary per case, 1 case per line) "{name:value}"
                        "csv": one row of feature names, followed by one row of
                        feature values per case.
  --format-path {absolute,relative,basename}
                        Controls input image and mask path formatting in the output.
                        "absolute" (Default): Absolute file paths.
                        "relative": File paths relative to current working directory.
                        "basename": Only stores filename.

Logging:
  Controls the (amount of) logging output to the console and the (optional) log-file.

  --logging-level LEVEL
                        Set capture level for logging
  --log-file FILE       File to append logger output to
  --verbosity [{1,2,3,4,5}], -v [{1,2,3,4,5}]
                        Regulate output to stderr. By default [3], level
                        WARNING and up are printed. By specifying this
                        argument without a value, level INFO [4] is assumed.
                        A higher value results in more verbose output.